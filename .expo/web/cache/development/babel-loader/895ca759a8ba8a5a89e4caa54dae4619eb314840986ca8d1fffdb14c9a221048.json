{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(' '),\n    _useState2 = _slicedToArray(_useState, 2),\n    enteredGoalText = _useState2[0],\n    setEnteredGoalText = _useState2[1];\n  function goalInputHandler(enteredText) {\n    setEnteredGoalText(enteredText);\n  }\n  function addGoalHandler() {\n    console.log(enteredGoalText);\n  }\n  return _jsxs(View, {\n    style: styles.appContainer,\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Your Course Goals\",\n        style: styles.textInput,\n        onChangeText: goalInputHandler\n      }), _jsx(Button, {\n        title: \"Add Goal\",\n        onPress: addGoalHandler\n      })]\n    }), _jsx(View, {\n      children: _jsx(Text, {\n        style: styles.goalContainer,\n        children: \"List of Goals\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  appContainer: {\n    flex: 1,\n    paddingTop: 50,\n    paddingHorizontal: 16\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingBottom: 24,\n    borderBottomWidth: 1,\n    borderColor: '#cccccc'\n  },\n  goalContainer: {\n    flex: 1\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#cccccc',\n    width: '70%',\n    marginRight: 8,\n    padding: 13,\n    color: '#cccccc'\n  }\n});","map":{"version":3,"names":["StatusBar","useState","StyleSheet","Text","View","Button","TextInput","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","enteredGoalText","setEnteredGoalText","goalInputHandler","enteredText","addGoalHandler","console","log","style","styles","appContainer","children","inputContainer","placeholder","textInput","onChangeText","title","onPress","goalContainer","create","flex","paddingTop","paddingHorizontal","flexDirection","justifyContent","alignItems","paddingBottom","borderBottomWidth","borderColor","borderWidth","width","marginRight","padding","color"],"sources":["C:/Users/tipqc/Documents/EMTECH3/Act2/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport { StyleSheet, Text, View, Button, TextInput } from 'react-native';\n\nexport default function App() {\n\n  const [enteredGoalText, setEnteredGoalText] = useState(' ');\n\n  function goalInputHandler(enteredText){\n    setEnteredGoalText(enteredText);\n  }\n  function addGoalHandler(){\n    console.log(enteredGoalText)\n  }\n\n  return (\n    <View style={styles.appContainer}>\n      <View style={styles.inputContainer}>\n        <TextInput placeholder='Your Course Goals' style={styles.textInput} onChangeText={goalInputHandler}/>\n        <Button title='Add Goal' onPress={addGoalHandler}/>\n      </View>\n      <View>\n        <Text style ={styles.goalContainer}>List of Goals</Text>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  appContainer: {\n    flex:1,\n    paddingTop: 50,\n    paddingHorizontal: 16,\n  },\n  inputContainer:{\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingBottom: 24,\n    borderBottomWidth: 1,\n    borderColor: '#cccccc',\n  },\n  goalContainer:{\n    flex:1,\n  },\n  textInput:{\n    borderWidth:1,\n    borderColor:'#cccccc',\n    width:'70%',\n    marginRight: 8,\n    padding: 13,\n    color: '#cccccc'\n  }\n\n});\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGjC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE5B,IAAAC,SAAA,GAA8CX,QAAQ,CAAC,GAAG,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApDG,eAAe,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAE1C,SAASI,gBAAgBA,CAACC,WAAW,EAAC;IACpCF,kBAAkB,CAACE,WAAW,CAAC;EACjC;EACA,SAASC,cAAcA,CAAA,EAAE;IACvBC,OAAO,CAACC,GAAG,CAACN,eAAe,CAAC;EAC9B;EAEA,OACEL,KAAA,CAACN,IAAI;IAACkB,KAAK,EAAEC,MAAM,CAACC,YAAa;IAAAC,QAAA,GAC/Bf,KAAA,CAACN,IAAI;MAACkB,KAAK,EAAEC,MAAM,CAACG,cAAe;MAAAD,QAAA,GACjCjB,IAAA,CAACF,SAAS;QAACqB,WAAW,EAAC,mBAAmB;QAACL,KAAK,EAAEC,MAAM,CAACK,SAAU;QAACC,YAAY,EAAEZ;MAAiB,CAAC,CAAC,EACrGT,IAAA,CAACH,MAAM;QAACyB,KAAK,EAAC,UAAU;QAACC,OAAO,EAAEZ;MAAe,CAAC,CAAC;IAAA,CAC/C,CAAC,EACPX,IAAA,CAACJ,IAAI;MAAAqB,QAAA,EACHjB,IAAA,CAACL,IAAI;QAACmB,KAAK,EAAGC,MAAM,CAACS,aAAc;QAAAP,QAAA,EAAC;MAAa,CAAM;IAAC,CACpD,CAAC;EAAA,CACH,CAAC;AAEX;AAEA,IAAMF,MAAM,GAAGrB,UAAU,CAAC+B,MAAM,CAAC;EAC/BT,YAAY,EAAE;IACZU,IAAI,EAAC,CAAC;IACNC,UAAU,EAAE,EAAE;IACdC,iBAAiB,EAAE;EACrB,CAAC;EACDV,cAAc,EAAC;IACbW,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,aAAa,EAAE,EAAE;IACjBC,iBAAiB,EAAE,CAAC;IACpBC,WAAW,EAAE;EACf,CAAC;EACDV,aAAa,EAAC;IACZE,IAAI,EAAC;EACP,CAAC;EACDN,SAAS,EAAC;IACRe,WAAW,EAAC,CAAC;IACbD,WAAW,EAAC,SAAS;IACrBE,KAAK,EAAC,KAAK;IACXC,WAAW,EAAE,CAAC;IACdC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE;EACT;AAEF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}